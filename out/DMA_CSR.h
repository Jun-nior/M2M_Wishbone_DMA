#ifndef DMA_CSR_H
#define DMA_CSR_H
#include "stdint.h"
#define DMA_CSR_SOURCE_ADDR_REG_ADDR_BIT_WIDTH 32
#define DMA_CSR_SOURCE_ADDR_REG_ADDR_BIT_MASK 0xffffffff
#define DMA_CSR_SOURCE_ADDR_REG_ADDR_BIT_OFFSET 0
#define DMA_CSR_SOURCE_ADDR_REG_BYTE_WIDTH 4
#define DMA_CSR_SOURCE_ADDR_REG_BYTE_SIZE 4
#define DMA_CSR_SOURCE_ADDR_REG_BYTE_OFFSET 0x0
#define DMA_CSR_DEST_ADDR_REG_ADDR_BIT_WIDTH 32
#define DMA_CSR_DEST_ADDR_REG_ADDR_BIT_MASK 0xffffffff
#define DMA_CSR_DEST_ADDR_REG_ADDR_BIT_OFFSET 0
#define DMA_CSR_DEST_ADDR_REG_BYTE_WIDTH 4
#define DMA_CSR_DEST_ADDR_REG_BYTE_SIZE 4
#define DMA_CSR_DEST_ADDR_REG_BYTE_OFFSET 0x4
#define DMA_CSR_LENGTH_REG_LEN_BIT_WIDTH 16
#define DMA_CSR_LENGTH_REG_LEN_BIT_MASK 0xffff
#define DMA_CSR_LENGTH_REG_LEN_BIT_OFFSET 0
#define DMA_CSR_LENGTH_REG_BYTE_WIDTH 4
#define DMA_CSR_LENGTH_REG_BYTE_SIZE 4
#define DMA_CSR_LENGTH_REG_BYTE_OFFSET 0x8
#define DMA_CSR_CONTROL_REG_GO_BIT_WIDTH 1
#define DMA_CSR_CONTROL_REG_GO_BIT_MASK 0x1
#define DMA_CSR_CONTROL_REG_GO_BIT_OFFSET 0
#define DMA_CSR_CONTROL_REG_IE_BIT_WIDTH 1
#define DMA_CSR_CONTROL_REG_IE_BIT_MASK 0x1
#define DMA_CSR_CONTROL_REG_IE_BIT_OFFSET 1
#define DMA_CSR_CONTROL_REG_BYTE_WIDTH 4
#define DMA_CSR_CONTROL_REG_BYTE_SIZE 4
#define DMA_CSR_CONTROL_REG_BYTE_OFFSET 0xc
#define DMA_CSR_STATUS_REG_BUSY_BIT_WIDTH 1
#define DMA_CSR_STATUS_REG_BUSY_BIT_MASK 0x1
#define DMA_CSR_STATUS_REG_BUSY_BIT_OFFSET 0
#define DMA_CSR_STATUS_REG_DONE_IF_BIT_WIDTH 1
#define DMA_CSR_STATUS_REG_DONE_IF_BIT_MASK 0x1
#define DMA_CSR_STATUS_REG_DONE_IF_BIT_OFFSET 16
#define DMA_CSR_STATUS_REG_BYTE_WIDTH 4
#define DMA_CSR_STATUS_REG_BYTE_SIZE 4
#define DMA_CSR_STATUS_REG_BYTE_OFFSET 0x10
typedef struct {
  uint32_t SOURCE_ADDR_REG;
  uint32_t DEST_ADDR_REG;
  uint32_t LENGTH_REG;
  uint32_t CONTROL_REG;
  uint32_t STATUS_REG;
  uint32_t __reserved_0x14;
  uint32_t __reserved_0x18;
  uint32_t __reserved_0x1c;
} DMA_CSR_t;
#endif
